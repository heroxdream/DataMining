sum = sum + sum(pollutant_values, na.rm = TRUE)
entries = entries + sum(!is.na(pollutant_values))
}
sum / entries
}
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
clear
clearPushBack()
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
clearPushBack()
pollutantmean("specdata", "nitrate", 23)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/rprog-scripts-submitscript1.R')
submit()
submit()
submit()
submit()
3 in 2
i in 2
?data.from
?data.frame
id = 1:10
id
df = data.frame(id = if)
df = data.frame(id = id)
df
df = data.frame(id = id, nobs = NULL)
df = data.frame(id = id, nobs = id)
df[1]
df[2]
df
df[2][1]
df[2][9]
df[2][1]
df[2][2]
sapply(df, FUN = function(x) is.na(x))
sapply(df, FUN = function(x) is.na(x[0]) & is.na(x[1]))
sapply(df, FUN = function(x) sum(is.na(x)) > 1)
sapply(df, FUN = function(x) sum(!is.na(x)) > 1)
sapply(df, print)
for (i in df){print(i)}
as.matrix(df)
for (i in as.matrix(df)){print(i)}
df[1,]
df[2,]
length(df)
dim(df)
dim(df)[1]
1 + TRUE
df[2,]
sapply(df[2,], function(x) is.na(x))
sapply(df[2,], function(x) sum(is.na(x))
)
sapply(df[2,], function(x) sum(sum(is.na(x))
)
)
c(df[2,])
as.vector(df[2,]
)
as.matrix(df[2, ])
sum(as.matrix(df[2, ]))
sum(as.matrix(df[1, ]))
df[1,]
as.matrix(df[1,])
as.vector(df[2,])
sum(as.vector(df[2, ]))
df
df[id == 1]
df[id == 2]
df["id" == 2]
df["id" = 2]
df[2]
df[1,]
df
df[df[[id]] == 1]
df[df[[id]] = 1]
df[df$id= 1]
df[df$id= 1,]
df[df$id== 1,]
df[df$id== 1,][2]
df[df$id== 1,][2] = 2
df
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 1)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 1)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 1)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
df
df[1,]
df[df$id == 1,]
df[df$id == 2,]
df[df$id == 3,]
df[df$id == 4,]
df[df$id == 5,]
df[df$id == 6,]
df[df$id == 7,]
df[df$id == 8,]
df
df[df$id == 9,]
df[df$id == 10,]
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
df
df[df$id == 6]
df[df$id == 6, 2]
df[df$id == 6, 2] = 66
df
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
df
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
df
dim(df)
dim(df)[1]
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
dim(df)[1]
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
1 in 1
seq(1)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
seq(1)
complete("specdata", 3)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", 3)
complete("specdata", c(2, 4, 8, 10, 12))
submit()
submit
submit()
submit()
complete("specdata", c(2, 4, 8, 10, 12))
submit()
df
df[1,]
sum(df[1,])
sum(is.na(df[1,])
)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
corr("specdata", 0)
rep(1))
rep(1)
rep(2)
rep(10)
rep(10, 2)
rep(10, 10)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
corr("specdata", 0)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
corr("specdata", 0)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
corr("specdata", 0)
cor(c(1,2,3), c(3,4,5))
cor(c(1,2,3), c(3,4,5, 8))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
corr("specdata", 0)
cr <- corr("specdata", 5000)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 5000)
cr <- corr("specdata", 0)
cr
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
cr
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr
cr <- corr("specdata", 0)
cr
rep(1 * 10)
rep(0 * 10)
rep(n * 10)
rep(0 * 10)
rep(10 * 0)
rep(10 , 0)
rep(10)
rep(10, 1)
rep(10, 20)
rep(0, 10)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
cr
?rep
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
complete("specdata", 3)
cr <- corr("specdata", 0)
cr = rep(0, 10)
cr
cr[1] = 1
cr
m = matrix(nrow = 3, ncol = 2)
m
m = matrix()
rbind(m, c(1,1))
m = matrix(, ncol = 2)
m
m = matrix(ncol = 2)
m
m = matrix()
m
m = matrix(nrow = 3, ncol = 2)
m
m[1,1] = 1
m[1,2]
m[1,2] = 2
m
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
df
df[1,2]
t = read.csv("specdata/001.csv")
t
class(t)
head(t)
t[1, 2]
t[1, 3]
t[1, 1]
t[1, 4]
sum(is.na(t[1,]))
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 0)
cr
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 150)
head(cr)
submit()
cr <- corr("specdata", 5000)
df
subset(df, nobs > 5000)
s = subset(df, nobs > 5000)
dim(s)
c = c()
c
length(c)
summary(c)
vector
rep(0, 0)
rep
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 5000)
c()
s = c()
s
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
cr <- corr("specdata", 5000)
cr
submit
submit()
submit()
s = vector(mode="numeric", length=0)
s
summary(s)
vector()
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
submit()
submit()
source('~/Dropbox/neu/tools/github/JohnsHopkinsR/air_pollution/corr.R')
submit()
?"array"
array(1:9, c(3*3))
array(1:9, c(3,3))
array(1:9, c(3,3,1))
array(1:27, c(3,3,3))
for(i in 2){print(i)}
for(i in seq(2)){print(i)}
array(sapply(1:9, as.character))
array(sapply(1:9, as.character), dim = c(2,2,2))
unclass(2)
unclass("2")
class(2)
class(2.1)
class()
This is my Markdown test
------------------------------------------
See the documentation here: http://rmarkdown.rstudio.com/ and here: http://shiny.rstudio.com/articles/rmarkdown.html
Can format the text in *italic* and **bold**
Examples:
This is my Markdown test
------------------------------------------
See the documentation here: http://rmarkdown.rstudio.com/ and here: http://shiny.rstudio.com/articles/rmarkdown.html
Can format the text in *italic* and **bold**
Examples:
- Calculations involving scalars: $x = \sqrt{9}$
Code only:
```
x <- sqrt(9)
ls()
```
Code with output:
```{r}
x <- sqrt(9)
print(ls())
```
- Embed boxplots from the diamonds dataset.
```{r}
library(ggplot2)
plot(price ~ color, data=diamonds, xlab='color', col=rainbow(7))
```
\documentclass[a4paper]{article}
\usepackage{Sweave} %--------------------------------!
\begin{document}
\SweaveOpts{concordance=TRUE}
\title{This is my Sweave test}
\maketitle
From the Sweave manual at\\
\texttt{https://stat.ethz.ch/R-manual/R-devel/library/utils/doc/Sweave.pdf}
\begin{citation}
Noweb (Ramsey, 1998) is a simple literate-programming tool which allows to combine program source code and the corresponding documentation into a single file. Different programs allow to extract documentation and/or source code. A noweb file is a simple text which consists of a sequence of code and documentation segments, these segments are called chunks.
\end{citation}
Examples:
\begin{enumerate}
\item Calculations involving scalars: $\sqrt{9}=$\Sexpr{sqrt(9)}
<<>>=
print(ls())
@
\item Embed boxplots from several distributions into a \LaTeX{} documentation.
<<get data>>=
library(ggplot2)
@
<<plot_boxplot, fig=TRUE, echo=FALSE>>=
plot(price ~ color, data=diamonds, xlab='color', col=rainbow(7))
@
\end{enumerate}
\end{document}
?dplyr
??dplyr
?dply
?adply
?plyr
summary(df)
head(diamonds)
summary(diamonds)
any(c(TRUE, TRUE))
any(c(TRUE, TRUE, FALSE))
?cut
cut(c(1,1,1,2,3,2))
cut(c(1,1,1,2,3,2), 1)
cut(c(1,1,1,2,3,2), breaks = 1)
lapply
?lapply
tapply(diamonds$price, diamonds$cut, summary)
tapply?
?
1
?tapply
plot(diamonds$price ~ diamonds$cut)
plot(diamonds$price ~ diamonds$depth)
plot(diamonds$price ~ diamonds$carat)
plot(diamonds$price ~ diamonds$carat,)
plot(price ~ carat, data=diamonds2, col="blue")
plot(price ~ carat, data=diamonds, col="blue")
plot(price ~ color, data=diamonds, col=rainbow(7))
smoothScatter(diamonds$carat, diamonds$price)
plot(price ~ color, data=diamonds, col=rainbow(7))
as.vector(c(TRUE, "TRUE"))
as.numeric(TRUE)
as.numeric(FALSE)
install.packages("ISLR")
library(ISLR)
auto = read.csv(Auto)
auto = read.csv("Auto")
class(Auto)
summary(College)
str(College)
table(College)
View(College)
View(College)
colnames(College)
rownames(College)
College[c("York College of Pennsylvania" )]
subset(Co)
subset(College, rownames(College) =="York College of Pennsylvania" )
subset(College, rownames(College) =="Northeastern University" )
subset(College, rownames(College) =="Harvard University" )
subset(College, rownames(College) ==" University" )
grep(rownames(College))
?grep
grep("m*i*t", rownames(College), ignore.case = TRUE)
grep("m.*i.*t.*", rownames(College), ignore.case = TRUE)
grep("^m.*i.*t.*", rownames(College), ignore.case = TRUE)
grep("^m.*is.*t.*", rownames(College), ignore.case = TRUE)
grep("^m.* istitute.*t.*", rownames(College), ignore.case = TRUE)
grep("^m.* institute.*t.*", rownames(College), ignore.case = TRUE)
College[355, ]
fix(College)
fix(college)
?fix
df
?df
fix(College)
install.packages("XQuartz")
rownames(College)
rownames(College) = College[, 1]
College
College[,1] = rownames(College)
College
str(College)
College
college = College
college
rownames(college) = college[,1]
college
dim(college)
head(college)
head(college, 1)
college, -1[]
college[,-1]
college[,-1]
summary(College)
pairlist(College[, 1:10])
?pair
?pairs
pairs(head(College))
pairs(head(College[, 1:10]))
pairs(College[, 1:10])
pairlist(College[, 1:10])
pairlist(College[, 12:10])
pairs(College[, 2:10])
summary(College)
View(College)
View(College)
View(College)
summary(College)
row.names(College)
College[, 1]
College[, -1]
College[, -0]
College[, 0]
College[, 1]
College[, 2]
College[, -1]
head(College[, -1], 2
)
pairs(College[, -1])
pairs(College[, -1])
setwd("~/Dropbox/neu/tools/github/data_mining/introduction_r")
ls()
dir()
ls()
library("ISLR")
head(College)
\item Instead of loading csv file from disk, I Installed the dateset from ISLR
<<load data>>=
library(ISLR)
head(College, 2)
summary(College)
str(College)
str(College)
pairs(College[, 1:10])
